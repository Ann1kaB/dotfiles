#!/bin/bash

get_active() {

  ACTIVE=$(xrandr --listmonitors | awk '{print $4}')

  for _a in $ACTIVE; do
    _ACTIVE+=("$_a")
  done
}

get_active

OUTPUTS=$(xrandr | awk '{print $1}' | sed 's/.*x.*//;s/Screen//;/^\s*$/d' | egrep -o "^\S*")

for _o in $OUTPUTS; do
  _OUT+=("$_o")
done

POSITION=$(xrandr --listmonitors | awk '{print $3}' | grep -o "+.*+")

for _p in $POSITION; do
  _POS+=("$_p")
  # center
  if [ "$_p" = "+0+" ]; then
    _POS0+=("$_p")
  else
    # not center
    _POSN0+=("$_p")
  fi
done

disp_command() {
  for _command in ${!_OUT[@]}; do

    # for every output that is not the first, extend Xorg left, or if there are 2 outputs only, do the
    # previous as well, except to the right if ${direction} is right.
    if [[ $_command != 0 && "$direction" = "left" ]] || [[ $_command != 0 && ${#_OUT[@]} -eq 2 ]]; then
      COMMAND+=("--output ${_OUT[$_command]}")
      if [[ "${_OUT[$((_command-1))]}" != "${_OUT[-1]}" ]]; then
	COMMAND+=(" --${direction}-of ${_OUT[$((_command-1))]}")
      fi
    # if ${direction} is right, make sure we don't add the last output to the xrandr command
    # also make sure we have more than 2 outputs because with only 2, right-of in reverse 
    # order is the same as left-of in normal order
    elif [[ $_command = 0 || "$direction" = "right" ]] && [ ${#_OUT[@]} -gt 2 ]; then
      # in reverse order, add to command for each output
      if [ "${_OUT[$((_command*-1))]}" != "${_OUT[0]}" ]; then
	      COMMAND+=("--output ${_OUT[$((_command*-1+1))]}")
        COMMAND+=("--right-of ${_OUT[$((_command*-1))]}")
      fi
    fi

    # turn off all outputs except the first
    if [[ "${_ACTIVE[*]}" = "${_OUT[*]}" && "$_command" != "0" ]]; then
      OFF+=("--output ${_OUT[$_command]} --off")
    # set check for all outputs on
    elif [[ "${_ACTIVE[*]}" = "${_OUT[*]}" && "$_command" = "0" ]]; then
      START_CHK="yes"
    fi

    # if active output is last, return to mirrored mode
    if [ "${_ACTIVE[*]}" = "${_OUT[-1]}" ]; then
      ON="--auto"
      LAST="yes"
    fi

    # sets outputs off if status is on
    if [[ "${DISP_STATE[$_command]}" = "ON" && -z "$LAST" && -z "$START_CHK" ]]; then
      OFF+=("--output ${_OUT[$_command]} --off")
    fi

    # if active output state is off, and $ON is not already defined
    if [[ "${DISP_STATE[$_command]}" = "OFF" && -z "$ON" && -z "$LAST" ]]; then
      ON="--output ${_OUT[$_command]} --auto"
    fi
      
  done
}

disp_state() {
  for _s in ${!_OUT[@]}; do
    if [[ "${_ACTIVE[*]}" =~ .*"${_OUT[$_s]}".* ]]; then
      DISP_STATE+=("ON")
      DISP_STATE_TEXT+=("DISPLAY: $((_s+1)):ON ")
    else
      DISP_STATE+=("OFF")
      DISP_STATE_TEXT+=("DISPLAY: $((_s+1)):OFF ")
    fi 
  done
}

disp_state

case "${_ACTIVE[*]} ${_POS[*]}" in
  "${_OUT[*]} ${_POS0[*]}")
  direction="left"
  disp_command
  xrandr ${COMMAND[@]}
  xsetroot -name "DISPLAY: EXTEND LEFT"
  ;;
  "${_OUT[*]} ${_POSN0[*]} ${_POS0[*]}")
  direction="right"
  disp_command
  xrandr ${COMMAND[@]}
  xsetroot -name "DISPLAY: EXTEND RIGHT"
  ;;
  "${_OUT[*]} ${_POS0[*]} ${_POSN0[*]}")
  disp_command
  xrandr ${OFF[@]} ${ON}
  unset DISP_STATE_TEXT DISP_STATE _ACTIVE
  get_active
  disp_state
  xsetroot -name "${DISP_STATE_TEXT[*]}"
  ;;
  "${_ACTIVE[*]} ${_POS0[*]}")
  disp_command
  xrandr ${OFF[@]} ${ON}
  unset DISP_STATE_TEXT DISP_STATE _ACTIVE
  get_active
  disp_state
  # if all displays are being set on, indicate we are in mirror mode
  if [[ ! "${DISP_STATE[*]}" =~ .*"OFF".* ]]; then
    xsetroot -name "DISPLAY: MIRROR"
  else
    xsetroot -name "${DISP_STATE_TEXT[*]}"
  fi
  ;;
  # if we have only one output, or something ohtherwise unexpected happens
  *)
  xrandr --auto
  xsetroot -name "ERROR: DISPLAY: MIRROR"
  ;;
esac

